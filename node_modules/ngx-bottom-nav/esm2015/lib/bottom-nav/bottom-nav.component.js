import { Component, HostBinding, Input } from '@angular/core';
/**
 * This component is a [Material-style bottom navigation bar]{@link https://material.io/design/components/bottom-navigation.html}.
 * It receives an array of [BottomNavItems]{@link BottomNavItem} in order to render navigation buttons.
 * With [Material theming]{@link https://github.com/latusinski/ngx-drawer-layout#enabling-material-theming}
 * enabled, this component changes its style, when the {@link color} property.
 */
export class BottomNavComponent {
    constructor() {
        /**
         * Navigation items, which are rendered inside the navigation bar.
         */
        this.items = [];
    }
    get colorPrimary() {
        return this.color === 'primary';
    }
    get accentPrimary() {
        return this.color === 'accent';
    }
    get warnPrimary() {
        return this.color === 'warn';
    }
    /**
     * Returns true if the length of {@link items} is greater than 4, which hides labels on inactive items.
     */
    get hideLabels() {
        return this.items.length > 4;
    }
}
BottomNavComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-bottom-nav',
                template: "<mat-toolbar [color]=\"color\">\n  <button\n    ngx-bottom-nav\n    *ngFor=\"let i of items\"\n    [hideLabel]=\"hideLabels\"\n    [routerLink]=\"i.routerLink\"\n    [label]=\"i.label\"\n    [exact]=\"i.exact\"\n  >\n    <mat-icon ngxBottomNavIcon>{{ i.icon }}</mat-icon>\n  </button>\n  <ng-content select=\"[ngx-bottom-nav]\"></ng-content>\n</mat-toolbar>\n",
                styles: [":host{--ngx-bottom-nav-background-color:transparent;display:block;width:100%}mat-toolbar{background:var(--ngx-bottom-nav-background-color);display:flex;height:56px;justify-content:center;overflow:hidden;padding:0}mat-toolbar ngx-bottom-nav-button{flex:1 1 auto;height:100%}"]
            },] }
];
BottomNavComponent.propDecorators = {
    items: [{ type: Input }],
    color: [{ type: Input }],
    colorPrimary: [{ type: HostBinding, args: ['class.color-primary',] }],
    accentPrimary: [{ type: HostBinding, args: ['class.color-accent',] }],
    warnPrimary: [{ type: HostBinding, args: ['class.color-warn',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm90dG9tLW5hdi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vcHJvamVjdHMvbmd4LWJvdHRvbS1uYXYvc3JjLyIsInNvdXJjZXMiOlsibGliL2JvdHRvbS1uYXYvYm90dG9tLW5hdi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBSTVEOzs7OztHQUtHO0FBTUgsTUFBTSxPQUFPLGtCQUFrQjtJQUwvQjtRQU1FOztXQUVHO1FBQ2EsVUFBSyxHQUFvQixFQUFFLENBQUM7SUE0QjlDLENBQUM7SUFyQkMsSUFDSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLFNBQVMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFDSSxhQUFhO1FBQ2YsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLFFBQVEsQ0FBQztJQUNqQyxDQUFDO0lBRUQsSUFDSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLE1BQU0sQ0FBQztJQUMvQixDQUFDO0lBRUQ7O09BRUc7SUFDSCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7WUFwQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLG1YQUEwQzs7YUFFM0M7OztvQkFLRSxLQUFLO29CQUtMLEtBQUs7MkJBRUwsV0FBVyxTQUFDLHFCQUFxQjs0QkFLakMsV0FBVyxTQUFDLG9CQUFvQjswQkFLaEMsV0FBVyxTQUFDLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge0JvdHRvbU5hdkl0ZW19IGZyb20gJy4uL2JvdHRvbS1uYXYnO1xuXG4vKipcbiAqIFRoaXMgY29tcG9uZW50IGlzIGEgW01hdGVyaWFsLXN0eWxlIGJvdHRvbSBuYXZpZ2F0aW9uIGJhcl17QGxpbmsgaHR0cHM6Ly9tYXRlcmlhbC5pby9kZXNpZ24vY29tcG9uZW50cy9ib3R0b20tbmF2aWdhdGlvbi5odG1sfS5cbiAqIEl0IHJlY2VpdmVzIGFuIGFycmF5IG9mIFtCb3R0b21OYXZJdGVtc117QGxpbmsgQm90dG9tTmF2SXRlbX0gaW4gb3JkZXIgdG8gcmVuZGVyIG5hdmlnYXRpb24gYnV0dG9ucy5cbiAqIFdpdGggW01hdGVyaWFsIHRoZW1pbmdde0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9sYXR1c2luc2tpL25neC1kcmF3ZXItbGF5b3V0I2VuYWJsaW5nLW1hdGVyaWFsLXRoZW1pbmd9XG4gKiBlbmFibGVkLCB0aGlzIGNvbXBvbmVudCBjaGFuZ2VzIGl0cyBzdHlsZSwgd2hlbiB0aGUge0BsaW5rIGNvbG9yfSBwcm9wZXJ0eS5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LWJvdHRvbS1uYXYnLFxuICB0ZW1wbGF0ZVVybDogJy4vYm90dG9tLW5hdi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2JvdHRvbS1uYXYuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBCb3R0b21OYXZDb21wb25lbnQge1xuICAvKipcbiAgICogTmF2aWdhdGlvbiBpdGVtcywgd2hpY2ggYXJlIHJlbmRlcmVkIGluc2lkZSB0aGUgbmF2aWdhdGlvbiBiYXIuXG4gICAqL1xuICBASW5wdXQoKSBwdWJsaWMgaXRlbXM6IEJvdHRvbU5hdkl0ZW1bXSA9IFtdO1xuXG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhpcyBuYXZpZ2F0aW9uIGJhciwgZm9sbG93aW5nIHRoZSBsb2dpYyBvZiBBbmd1bGFyIE1hdGVyaWFsXG4gICAqL1xuICBASW5wdXQoKSBwdWJsaWMgY29sb3I6ICdwcmltYXJ5JyB8ICdhY2NlbnQnIHwgJ3dhcm4nO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuY29sb3ItcHJpbWFyeScpXG4gIGdldCBjb2xvclByaW1hcnkoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuY29sb3IgPT09ICdwcmltYXJ5JztcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuY29sb3ItYWNjZW50JylcbiAgZ2V0IGFjY2VudFByaW1hcnkoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuY29sb3IgPT09ICdhY2NlbnQnO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5jb2xvci13YXJuJylcbiAgZ2V0IHdhcm5QcmltYXJ5KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmNvbG9yID09PSAnd2Fybic7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0cnVlIGlmIHRoZSBsZW5ndGggb2Yge0BsaW5rIGl0ZW1zfSBpcyBncmVhdGVyIHRoYW4gNCwgd2hpY2ggaGlkZXMgbGFiZWxzIG9uIGluYWN0aXZlIGl0ZW1zLlxuICAgKi9cbiAgZ2V0IGhpZGVMYWJlbHMoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuaXRlbXMubGVuZ3RoID4gNDtcbiAgfVxufVxuIl19