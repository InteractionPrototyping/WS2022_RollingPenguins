(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material/core'), require('@angular/material/icon'), require('@angular/material/toolbar'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('ngx-bottom-nav', ['exports', '@angular/core', '@angular/common', '@angular/material/core', '@angular/material/icon', '@angular/material/toolbar', '@angular/router'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ngx-bottom-nav'] = {}, global.ng.core, global.ng.common, global.ng.material.core, global.ng.material.icon, global.ng.material.toolbar, global.ng.router));
}(this, (function (exports, core, common, core$1, icon, toolbar, router) { 'use strict';

    /**
     * This component is a [Material-style bottom navigation bar]{@link https://material.io/design/components/bottom-navigation.html}.
     * It receives an array of [BottomNavItems]{@link BottomNavItem} in order to render navigation buttons.
     * With [Material theming]{@link https://github.com/latusinski/ngx-drawer-layout#enabling-material-theming}
     * enabled, this component changes its style, when the {@link color} property.
     */
    var BottomNavComponent = /** @class */ (function () {
        function BottomNavComponent() {
            /**
             * Navigation items, which are rendered inside the navigation bar.
             */
            this.items = [];
        }
        Object.defineProperty(BottomNavComponent.prototype, "colorPrimary", {
            get: function () {
                return this.color === 'primary';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BottomNavComponent.prototype, "accentPrimary", {
            get: function () {
                return this.color === 'accent';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BottomNavComponent.prototype, "warnPrimary", {
            get: function () {
                return this.color === 'warn';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(BottomNavComponent.prototype, "hideLabels", {
            /**
             * Returns true if the length of {@link items} is greater than 4, which hides labels on inactive items.
             */
            get: function () {
                return this.items.length > 4;
            },
            enumerable: false,
            configurable: true
        });
        return BottomNavComponent;
    }());
    BottomNavComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ngx-bottom-nav',
                    template: "<mat-toolbar [color]=\"color\">\n  <button\n    ngx-bottom-nav\n    *ngFor=\"let i of items\"\n    [hideLabel]=\"hideLabels\"\n    [routerLink]=\"i.routerLink\"\n    [label]=\"i.label\"\n    [exact]=\"i.exact\"\n  >\n    <mat-icon ngxBottomNavIcon>{{ i.icon }}</mat-icon>\n  </button>\n  <ng-content select=\"[ngx-bottom-nav]\"></ng-content>\n</mat-toolbar>\n",
                    styles: [":host{--ngx-bottom-nav-background-color:transparent;display:block;width:100%}mat-toolbar{background:var(--ngx-bottom-nav-background-color);display:flex;height:56px;justify-content:center;overflow:hidden;padding:0}mat-toolbar ngx-bottom-nav-button{flex:1 1 auto;height:100%}"]
                },] }
    ];
    BottomNavComponent.propDecorators = {
        items: [{ type: core.Input }],
        color: [{ type: core.Input }],
        colorPrimary: [{ type: core.HostBinding, args: ['class.color-primary',] }],
        accentPrimary: [{ type: core.HostBinding, args: ['class.color-accent',] }],
        warnPrimary: [{ type: core.HostBinding, args: ['class.color-warn',] }]
    };

    var BottomNavButtonComponent = /** @class */ (function () {
        function BottomNavButtonComponent() {
        }
        return BottomNavButtonComponent;
    }());
    BottomNavButtonComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'button[ngx-bottom-nav]',
                    template: "<div\n  class=\"ngx-bottom-nav-button\"\n  [routerLink]=\"routerLink\"\n  routerLinkActive=\"active\"\n  [routerLinkActiveOptions]=\"{ exact: exact }\"\n  [class.label-hidden]=\"hideLabel\"\n>\n  <ng-content select=\"[ngxBottomNavIcon]\"></ng-content>\n  <div class=\"label\">{{ label }}</div>\n</div>\n",
                    styles: [":host{--ngx-bottom-nav-button-active-color:#000;--ngx-bottom-nav-button-color:#646464;-moz-user-select:none;-webkit-tap-highlight-color:transparent;-webkit-user-select:none;align-items:center;background:transparent;border:none;color:inherit;cursor:pointer;display:flex;flex-direction:column;height:calc(100% - 20px);justify-content:center;max-width:168px;min-width:80px;padding:8px 12px 12px;text-decoration:none;user-select:none}.ngx-bottom-nav-button:focus,:host{outline:none}.ngx-bottom-nav-button:not(.active){color:var(--ngx-bottom-nav-button-color)}.ngx-bottom-nav-button.active{--ngx-bottom-nav-button-color:var(--ngx-bottom-nav-button-active-color)}:host(.active:not(.label-hidden)){padding-top:7px}.label{font-size:12px;line-height:12px}:host(.active) .label{font-size:13px;line-height:13px}:host(.label-hidden:not(.active)){height:calc(100% - 32px);padding-bottom:16px;padding-top:16px}:host(.label-hidden:not(.active)) .label{display:none}"]
                },] }
    ];
    BottomNavButtonComponent.propDecorators = {
        hideLabel: [{ type: core.Input }],
        icon: [{ type: core.Input }],
        label: [{ type: core.Input }],
        routerLink: [{ type: core.Input }],
        exact: [{ type: core.Input }]
    };

    var BottomNavModule = /** @class */ (function () {
        function BottomNavModule() {
        }
        return BottomNavModule;
    }());
    BottomNavModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [
                        BottomNavComponent,
                        BottomNavButtonComponent,
                    ],
                    imports: [
                        common.CommonModule,
                        icon.MatIconModule,
                        core$1.MatRippleModule,
                        toolbar.MatToolbarModule,
                        router.RouterModule
                    ],
                    exports: [
                        BottomNavComponent,
                        BottomNavButtonComponent
                    ]
                },] }
    ];

    /*
     * Public API Surface of bottom-nav
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BottomNavButtonComponent = BottomNavButtonComponent;
    exports.BottomNavComponent = BottomNavComponent;
    exports.BottomNavModule = BottomNavModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-bottom-nav.umd.js.map
